// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NotFound should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotFound />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3
          className="error-text"
        >
          the page you are requesting is not found
        </h3>,
        <Link
          replace={false}
          to="/"
        >
          <button
            className="error-btn"
          >
             go back home
          </button>
           
        </Link>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "the page you are requesting is not found",
          "className": "error-text",
        },
        "ref": null,
        "rendered": "the page you are requesting is not found",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <button
              className="error-btn"
            >
               go back home
            </button>,
            " ",
          ],
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " go back home",
              "className": "error-btn",
            },
            "ref": null,
            "rendered": " go back home",
            "type": "button",
          },
          " ",
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3
            className="error-text"
          >
            the page you are requesting is not found
          </h3>,
          <Link
            replace={false}
            to="/"
          >
            <button
              className="error-btn"
            >
               go back home
            </button>
             
          </Link>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "the page you are requesting is not found",
            "className": "error-text",
          },
          "ref": null,
          "rendered": "the page you are requesting is not found",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <button
                className="error-btn"
              >
                 go back home
              </button>,
              " ",
            ],
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " go back home",
                "className": "error-btn",
              },
              "ref": null,
              "rendered": " go back home",
              "type": "button",
            },
            " ",
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
